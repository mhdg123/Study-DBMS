그룹함수
여러개의 레코드의 필드 값을 계산하여 값을 내는 함수
다양한  그룹함수들이 있다.
GROUP BY : 그룹을 묶는 단위
HAVING : 그룹함수 결과에 대한 조건 (WHERE 와 헷갈리지 않도록 주의)

테이블의 데이터갯수
select conut(*) from 테이블명

select conut(컬럼명) from 테이블명
=> 이 컬러의 데이터 중 null값이 있다면 제외하고 계산 //그룹함수에선 기본적으로 null값은 제외됨

 그룹함수는 null 값은 계산안하기 때문에
 null 허용 필드에 대해 계산할때는 반드시 ifnull 등을 사용하여 처리해야 함
 그래야 제대로 된 값 나옴

select avg(bonus) from 테이블명 => 이렇게 null값은 제외하기 때문에 평균인원이 맞지 않음
select avg(ifnull(bonus,0)) from 테이블명 => 이렇게 해야 그 인원에 맞는 평균값이 나옴 

부서별로 보너스의 평균을 계산할 때
select 컬럼명(부서), avg(if(bonus,bonus,0)) from 테이블명 group by 부서
SELECT 절에 그룹함수 아닌 것과 그룹함수는 같이 올수는 없다.  이 경우 그룹함수가 아닌 것들은 GROUP BY 로 묶여야 할 것이다.

그룹함수는 where절을 사용하지 못한다
그러므로 조건을 걸 때는 having을 사용해야함

select 부서, avg(ifnull(bonus,0)) 보너스평균 from 테이블명 group by 부서 having avg(ifnull(bonus,0)) > 200
=> 평균보너스가 200이 넘는 부서 출력 

*avg(ifnull(bonus,0)를 having에도 또한번 써야 하기 때문에 불편함 그래서 보너스평균이라는 별명으로 대체가능
즉 having 보너스평균>200 도 가능함 
SELECT 이전임에도 SELECT 의 alias 를 사용가능? <-- 요즘 dB 엔진에선 다시 흝는다.
대신 alias에서 쌍따옴표 빼야함 // HAVING이 먼저 실행되는데 요즘은 쿼리문을 두번 훓어서 가능함 


 **<SELECT 쿼리문 순서>  -   처리순서
  SELECT             - (5)
  FROM               - (1)
  WHERE              - (2) 조건절 - 거를거 미리 거르고 
  GROUP BY           - (3) where절은 그룹함수가 시행되기 전이므로 못씀 
  HAVING             - (4)
  ORDER BY           - (6) 마지막 정렬 

